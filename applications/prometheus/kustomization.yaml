apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: prometheus

resources:
  - ./namespace.yaml
  - ./tailscale-prom-sidecar-sealedsecret.yaml
  - ./prometheus-rules-cm.yaml
  - ./prometheus-targets-cm.yaml
  - ./tailscale-rbac.yaml
helmCharts:
  - name: kube-prometheus-stack
    repo: https://prometheus-community.github.io/helm-charts
    releaseName: prometheus
    # Version upgrade notes and container image versions at:
    # https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
    # Version changelogs at:
    # https://github.com/prometheus-community/helm-charts/releases
    version: 74.0.0 # operator version 0.83.0 / prometheus version 3.4.1 / grafana version 12.0.1
    namespace: prometheus
    includeCRDs: true
    valuesInline:
      crds:
        enabled: false
      prometheusOperator:
        enabled: false
      namespaceOverride: "prometheus"
      defaultRules:
        create: false
      kubeApiServer:
        enabled: false
      kubelet:
        enabled: false
      kubeControllerManager:
        enabled: false
      coreDns:
        enabled: false
      kubeEtcd:
        enabled: false
      kubeScheduler:
        enabled: false
      kubeProxy:
        enabled: false
      kube-state-metrics:
        enabled: false
      nodeExporter:
        enabled: false
      prometheus-node-exporter:
        prometheus:
          monitor:
            enabled: false
      grafana:
        enabled: false
      alertmanager:
        enabled: false
      grafana:
        enabled: false
      prometheus:
        prometheusSpec:
          dnsConfig:
            nameservers:
              - 127.0.0.1
          storageSpec:
            volumeClaimTemplate:
              spec:
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: 100Mi
          ruleSelector:
            matchLabels:
              prometheus.io/rules: "true"
          alertingEndpoints:
            - name: alertmanager-main
              namespace: alertmanager
              port: 9093
          # Dynamic target scraping
          volumes:
            - name: external-targets
              configMap:
                name: prometheus-external-targets
          volumeMounts:
            - name: external-targets
              mountPath: /etc/prometheus/targets
              readOnly: true
          additionalScrapeConfigs:
            - job_name: 'file-sd-scrape'
              # This tells Prometheus to read targets from our JSON file
              file_sd_configs:
              - files:
                - '/etc/prometheus/targets/external-targets.json'
          containers:
            - name: tailscale-sidecar
              image: tailscale/tailscale:latest
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: TS_AUTHKEY
                  valueFrom:
                    secretKeyRef:
                      name: tailscale-prom-sidecard-auth
                      key: TS_AUTHKEY
                # This tells Tailscale where to store its state inside the cluster.
                # It prevents the need to re-authenticate every time the pod restarts.
                - name: TS_KUBE_SECRET
                  value: "tailscale-prom-sidecard-auth"
                - name: TS_HOSTNAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: TS_TAGS
                  value: "tag:k8s"
                - name: TS_USERSPACE
                  value: "false"
                - name: TS_DEBUG_FIREWALL_MODE
                  value: auto
                - name: POD_UID
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.uid
                - name: TS_ACCEPT_DNS
                  value: "false"
                - name: TS_STATEDIR
                  value: "/tmp"
              securityContext:
                privileged: true
                capabilities:
                  add:
                    - NET_ADMIN
                    - NET_RAW